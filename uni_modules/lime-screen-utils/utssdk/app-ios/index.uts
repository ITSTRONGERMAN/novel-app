import { UIScreen, UIApplication } from 'UIKit';
import { UTSiOS } from "DCloudUTSFoundation";

import {
	SetScreenBrightnessOption,
	GeneralCallbackResult,
	GetScreenBrightnessOption,
	SetKeepScreenOnOption,
	GetScreenBrightnessSuccessCallbackOption
} from '../interface.uts'
import { CGFloat } from 'CoreFoundation';


class GeneralCallbackResultImpl implements GeneralCallbackResult {
	errMsg : string
	constructor(errMsg : string) {
		this.errMsg = errMsg
	}
}
class GetScreenBrightnessSuccessCallbackOptionImpl implements GetScreenBrightnessSuccessCallbackOption {
	errMsg : string
	value : number
	constructor(value:number,errMsg : string) {
		this.value = value
		this.errMsg = errMsg
	}
}

function clamp(value: number, min: number, max: number):number {
	return Math.max(min, Math.min(value, max))
}

export function setScreenBrightness(option : SetScreenBrightnessOption) {
	const brightness = clamp(option.value, 0, 1)
	UIScreen.main.brightness = CGFloat(brightness.doubleValue) 
	option.success?.(new GeneralCallbackResultImpl('成功'))
	option.complete?.(new GeneralCallbackResultImpl('成功'))
}
export function getScreenBrightness(option : GetScreenBrightnessOption){
	const brightness = Number.from(UIScreen.main.brightness)
	option.success?.(new GetScreenBrightnessSuccessCallbackOptionImpl(brightness, '成功'))
	option.complete?.(new GeneralCallbackResultImpl('成功'))
}
export function setKeepScreenOn(option: SetKeepScreenOnOption) {
	// 保持屏幕常亮
	UIApplication.shared.isIdleTimerDisabled = option.keepScreenOn
	option.success?.(new GeneralCallbackResultImpl('成功'))
	option.complete?.(new GeneralCallbackResultImpl('成功'))
}