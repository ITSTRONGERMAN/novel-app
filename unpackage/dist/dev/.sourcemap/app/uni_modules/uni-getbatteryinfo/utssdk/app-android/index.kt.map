{"version":3,"sources":["uni_modules/uni-getbatteryinfo/utssdk/app-android/index.uts","uni_modules/uni-getbatteryinfo/utssdk/interface.uts","uni_modules/uni-getbatteryinfo/utssdk/unierror.uts"],"sourcesContent":["import Context from \"android.content.Context\";\r\nimport BatteryManager from \"android.os.BatteryManager\";\r\n\r\nimport { GetBatteryInfo, GetBatteryInfoOptions, GetBatteryInfoSuccess, GetBatteryInfoResult,GetBatteryInfoSync } from '../interface.uts'\r\nimport IntentFilter from 'android.content.IntentFilter';\r\nimport Intent from 'android.content.Intent';\r\n\r\nimport { GetBatteryInfoFailImpl } from '../unierror';\r\n\r\n/**\r\n * 异步获取电量\r\n */\r\nexport const getBatteryInfo : GetBatteryInfo = function (options : GetBatteryInfoOptions) {\r\n\r\n\r\n    const context = UTSAndroid.getAppContext();\r\n    if (context != null) {\r\n        const manager = context.getSystemService(\r\n            Context.BATTERY_SERVICE\r\n        ) as BatteryManager;\r\n        const level = manager.getIntProperty(\r\n            BatteryManager.BATTERY_PROPERTY_CAPACITY\r\n        );\r\n\r\n        let ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\r\n        let batteryStatus = context.registerReceiver(null, ifilter);\r\n        let status = batteryStatus?.getIntExtra(BatteryManager.EXTRA_STATUS, -1);\r\n        let isCharging = status == BatteryManager.BATTERY_STATUS_CHARGING || status == BatteryManager.BATTERY_STATUS_FULL;\r\n\r\n        const res : GetBatteryInfoSuccess = {\r\n            errMsg: 'getBatteryInfo:ok',\r\n            level,\r\n            isCharging: isCharging\r\n        }\r\n        options.success?.(res)\r\n        options.complete?.(res)\r\n    } else {\r\n\t\tlet res = new GetBatteryInfoFailImpl(1001);\r\n        options.fail?.(res)\r\n        options.complete?.(res)\r\n    }\r\n}\r\n\r\n/**\r\n * 同步获取电量示例\r\n */\r\nexport const getBatteryInfoSync : GetBatteryInfoSync = function (): GetBatteryInfoResult {\r\n\r\n    const context = UTSAndroid.getAppContext();\r\n    if (context != null) {\r\n\r\n\r\n        const manager = context.getSystemService(\r\n            Context.BATTERY_SERVICE\r\n        ) as BatteryManager;\r\n        const level = manager.getIntProperty(\r\n            BatteryManager.BATTERY_PROPERTY_CAPACITY\r\n        );\r\n        \r\n        let ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\r\n        let batteryStatus = context.registerReceiver(null, ifilter);\r\n        let status = batteryStatus?.getIntExtra(BatteryManager.EXTRA_STATUS, -1);\r\n        let isCharging = status == BatteryManager.BATTERY_STATUS_CHARGING || status == BatteryManager.BATTERY_STATUS_FULL;\r\n        \r\n        const res : GetBatteryInfoResult = {\r\n            level: level,\r\n            isCharging: isCharging\r\n        };\r\n\r\n        return res;\r\n    }\r\n    else {\r\n        /**\r\n         * 无有效上下文\r\n         */\r\n        const res : GetBatteryInfoResult = {\r\n            level: -1,\r\n            isCharging: false\r\n        };\r\n        return res;\r\n    }\r\n\r\n\r\n}\r\n","export type GetBatteryInfoSuccess = {\n  errMsg: string,\n  /**\n  * 设备电量，范围1 - 100\n  */\n  level: number,\n  /**\n  * 是否正在充电中\n  */\n  isCharging: boolean\n}\n\nexport type GetBatteryInfoOptions = {\n  /**\n    * 接口调用结束的回调函数（调用成功、失败都会执行）\n    */\n  success?: (res: GetBatteryInfoSuccess) => void\n  /**\n    * 接口调用失败的回调函数\n    */\n  fail?: (res: UniError) => void\n  /**\n    * 接口调用成功的回调\n    */\n  complete?: (res: any) => void\n}\n\nexport type GetBatteryInfoResult = {\n  /**\n  * 设备电量，范围1 - 100\n  */\n  level: number,\n  /**\n  * 是否正在充电中\n  */\n  isCharging: boolean\n}\n\n/**\n * 错误码\n * - 1001 getAppContext is null\n */\nexport type GetBatteryInfoErrorCode = 1001 | 1002;\n/**\n * GetBatteryInfo 的错误回调参数\n */\nexport interface GetBatteryInfoFail extends IUniError {\n  errCode: GetBatteryInfoErrorCode\n};\n\n/**\n* 获取电量信息\n* @param {GetBatteryInfoOptions} options\n*\n*\n* @tutorial https://uniapp.dcloud.net.cn/api/system/batteryInfo.html\n* @platforms APP-IOS = ^9.0,APP-ANDROID = ^22\n* @since 3.6.11\n*\n* @assert () => success({errCode: 0, errSubject: \"uni-getBatteryInfo\", errMsg: \"getBatteryInfo:ok\", level: 60, isCharging: false })\n* @assert () => fail({errCode: 1001, errSubject: \"uni-getBatteryInfo\", errMsg: \"getBatteryInfo:fail getAppContext is null\" })\n*/\nexport type GetBatteryInfo = (options: GetBatteryInfoOptions) => void\n\n\nexport type GetBatteryInfoSync = () => GetBatteryInfoResult\n\ninterface Uni {\n\n  /**\n   * 获取电池电量信息\n   *\n   * @example\n   * ```typescript\n   * uni.getBatteryInfo({\n   *\t\tsuccess(res) {\n   *\t\t\t__f__('log','at uni_modules/uni-getbatteryinfo/utssdk/interface.uts:77',res);\n   *\t\t}\n   * })\n   * ```\n   * @remark\n   * - 该接口需要同步调用\n   * @uniPlatform {\n   *    \"app\": {\n   *        \"android\": {\n   *            \"osVer\": \"4.4.4\",\n   *            \"uniVer\": \"3.6.11\",\n   *            \"unixVer\": \"3.9.0\"\n   *        },\n   *        \"ios\": {\n   *            \"osVer\": \"12.0\",\n   *            \"uniVer\": \"3.6.11\",\n   *            \"unixVer\": \"4.11\"\n   *        },\n     *    \"harmony\": {\n     *      \"osVer\": \"3.0\",\n     *      \"uniVer\": \"4.23\",\n     *      \"unixVer\": \"x\"\n     *    }\n   *    },\n   *    \"web\": {\n   *      \"uniVer\": \"3.6.11\",\n   *      \"unixVer\": \"4.0\"\n   *    }\n   * }\n   * @uniVueVersion 2,3  //支持的vue版本\n   *\n   */\n  getBatteryInfo(options: GetBatteryInfoOptions): void,\n  /**\n   * 同步获取电池电量信息\n   *\n   * @example\n   * ```typescript\n   * uni.getBatteryInfo()\n   * ```\n   * @remark\n   * - 该接口需要同步调用\n   * @uniPlatform {\n   *    \"app\": {\n   *        \"android\": {\n   *            \"osVer\": \"4.4.4\",\n   *            \"uniVer\": \"3.6.11\",\n   *            \"unixVer\": \"3.9.0\"\n   *        },\n   *        \"ios\": {\n   *            \"osVer\": \"12.0\",\n   *            \"uniVer\": \"3.6.11\",\n   *            \"unixVer\": \"4.11\"\n   *        },\n     *    \"harmony\": {\n     *      \"osVer\": \"3.0\",\n     *      \"uniVer\": \"4.23\",\n     *      \"unixVer\": \"x\"\n     *    }\n   *    },\n   *    \"web\": {\n   *      \"uniVer\": \"3.6.11\",\n   *      \"unixVer\": \"4.0\"\n   *    }\n   * }\n   * @uniVueVersion 2,3  //支持的vue版本\n   *\n   */\n  getBatteryInfoSync(): GetBatteryInfoResult\n\n}\n","import { GetBatteryInfoErrorCode, GetBatteryInfoFail } from \"./interface.uts\"\n/**\n * 错误主题\n */\nexport const UniErrorSubject = 'uni-getBatteryInfo';\n\n\n/**\n * 错误信息\n * @UniError\n */\nexport const UniErrors : Map<GetBatteryInfoErrorCode, string> = new Map([\n  /**\n   * 错误码及对应的错误信息\n   */\n  [1001, 'getBatteryInfo:fail getAppContext is null'],\n  [1002, 'getBatteryInfo:fail not support'],\n]);\n\n\n/**\n * 错误对象实现\n */\nexport class GetBatteryInfoFailImpl extends UniError implements GetBatteryInfoFail {\n  override errCode : GetBatteryInfoErrorCode;\n  /**\n   * 错误对象构造函数\n   */\n  constructor(errCode : GetBatteryInfoErrorCode) {\n    super();\n    this.errSubject = UniErrorSubject;\n    this.errCode = errCode;\n    this.errMsg = UniErrors[errCode] ?? \"\";\n  }\n}\n"],"names":[],"mappings":";;AAAA,OAAoB,uBAAyB,CAAC;AAK9C,OAAmB,sBAAwB,CAAC;AAD5C,OAAyB,4BAA8B,CAAC;AAHxD,OAA2B,yBAA2B,CAAC;;;;;;;;;;;;ACDnB,WAAxB;IACV;qBAAQ,MAAM,CAAC;IAIf;oBAAO,MAAM,CAAC;IAId;yBAAY,OAAO,SAAA;;;;;;AAGe,WAAxB;IAIV,oBAAW,KAAK,0BAA0B,IAAI,UAAA;IAI9C,iBAAQ,KAAK,aAAa,IAAI,UAAA;IAI9B,qBAAY,KAAK,GAAG,KAAK,IAAI,UAAA;;;;;;AAGI,WAAvB;IAIV;oBAAO,MAAM,CAAC;IAId;yBAAY,OAAO,SAAA;;;;;;UAOT,0BAA0B,MAAI;UAIzB,qBAA2B;iBAC1C,SAAS;;UAeC,kBAAkB,SAAS,0BAA0B,IAAI;UAGzD,2BAA2B;AC7DhC,IAAM,kBAAkB;AAOxB,IAAM,WAAY,6BAA6B,MAAM,IAAI,AAAI,IAAI;IAItE;AAAC,YAAI;QAAE;KAA4C;IACnD;AAAC,YAAI;QAAE;KAAkC;CAC1C;AAMK,WAAO,yBAA+B;;;;IAC1C,aAAS,iCAAkC;IAI3C,YAAY,gCAAiC,IAC3C,KAAK,GADsC;QAE3C,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,MAAM,GAAG,SAAS,CAAC,QAAQ,IAAI;IACtC;;AFrBK,IAAM,iCAAkC,IAAU,8BAA+B,EAAA;IAGpF,IAAM,UAAU,WAAW,aAAa;IACxC,IAAI,WAAW,IAAI,EAAE;QACjB,IAAM,UAAU,QAAQ,gBAAgB,CACpC,QAAQ,eAAe,EAC1B,EAAA,CAAI;QACL,IAAM,QAAQ,QAAQ,cAAc,CAChC,eAAe,yBAAyB;QAG5C,IAAI,UAAU,AAAI,aAAa,OAAO,sBAAsB;QAC5D,IAAI,gBAAgB,QAAQ,gBAAgB,CAAC,IAAI,EAAE;QACnD,IAAI,SAAS,eAAe,YAAY,eAAe,YAAY,EAAE,CAAC,CAAC;QACvE,IAAI,aAAa,UAAU,eAAe,uBAAuB,IAAI,UAAU,eAAe,mBAAmB;QAEjH,IAAM,4BACF,SAAQ,qBACR,QAAA,OACA,aAAY;QAEhB,QAAQ,OAAO,SAAG;QAClB,QAAQ,QAAQ,SAAG;WAChB;QACT,IAAI,MAAM,uBAA2B,IAAI;QACnC,QAAQ,IAAI,SAAG;QACf,QAAQ,QAAQ,SAAG;;AAE3B;;AAKO,IAAM,yCAA0C,4BAAiC;IAEpF,IAAM,UAAU,WAAW,aAAa;IACxC,IAAI,WAAW,IAAI,EAAE;QAGjB,IAAM,UAAU,QAAQ,gBAAgB,CACpC,QAAQ,eAAe,EAC1B,EAAA,CAAI;QACL,IAAM,QAAQ,QAAQ,cAAc,CAChC,eAAe,yBAAyB;QAG5C,IAAI,UAAU,AAAI,aAAa,OAAO,sBAAsB;QAC5D,IAAI,gBAAgB,QAAQ,gBAAgB,CAAC,IAAI,EAAE;QACnD,IAAI,SAAS,eAAe,YAAY,eAAe,YAAY,EAAE,CAAC,CAAC;QACvE,IAAI,aAAa,UAAU,eAAe,uBAAuB,IAAI,UAAU,eAAe,mBAAmB;QAEjH,IAAM,2BACF,QAAO,OACP,aAAY;QAGhB,OAAO;WAEN;QAID,IAAM,2BACF,QAAO,CAAC,CAAC,EACT,aAAY,KAAK;QAErB,OAAO;;AAIf;;ACvEoC;IAIlC,SAAA,SAAQ,oBAAsC;IAI9C,SAAA,MAAK,oBAAyB;IAI9B,SAAA,UAAS,oBAAoB;;uBAsCD,SAAS,kCAA0B,IAAI;8DA9CxD,KAAK;gCAAL;;iBAIH,KAAK;6BAAL;;qBAII,KAAK,GAAG;iCAAR;;;;8BAyCyB"}