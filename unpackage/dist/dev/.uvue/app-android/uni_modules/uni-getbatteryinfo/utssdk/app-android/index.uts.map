{"version":3,"file":"index.uts","sourceRoot":"","sources":["uni_modules/uni-getbatteryinfo/utssdk/app-android/index.uts"],"names":[],"mappings":"AAAA,OAAO,OAAO,MAAM,yBAAyB,CAAC;AAC9C,OAAO,cAAc,MAAM,2BAA2B,CAAC;AAEvD,OAAO,EAAE,cAAc,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,oBAAoB,EAAC,kBAAkB,EAAE,MAAM,kBAAkB,CAAA;AACxI,OAAO,YAAY,MAAM,8BAA8B,CAAC;AACxD,OAAO,MAAM,MAAM,wBAAwB,CAAC;AAE5C,OAAO,EAAE,sBAAsB,EAAE,MAAM,aAAa,CAAC;AAErD;;GAEG;AACH,MAAM,CAAC,MAAM,cAAc,EAAG,cAAc,GAAG,UAAU,OAAO,EAAG,qBAAqB;IAGpF,MAAM,OAAO,GAAG,UAAU,CAAC,aAAa,EAAE,CAAC;IAC3C,IAAI,OAAO,IAAI,IAAI,EAAE;QACjB,MAAM,OAAO,GAAG,OAAO,CAAC,gBAAgB,CACpC,OAAO,CAAC,eAAe,CAC1B,IAAI,cAAc,CAAC;QACpB,MAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAChC,cAAc,CAAC,yBAAyB,CAC3C,CAAC;QAEF,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;QAC9D,IAAI,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5D,IAAI,MAAM,GAAG,aAAa,EAAE,WAAW,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QACzE,IAAI,UAAU,GAAG,MAAM,IAAI,cAAc,CAAC,uBAAuB,IAAI,MAAM,IAAI,cAAc,CAAC,mBAAmB,CAAC;QAElH,MAAM,GAAG,EAAG,qBAAqB,GAAG;YAChC,MAAM,EAAE,mBAAmB;YAC3B,KAAK;YACL,UAAU,EAAE,UAAU;SACzB,CAAA;QACD,OAAO,CAAC,OAAO,EAAE,CAAC,GAAG,CAAC,CAAA;QACtB,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAA;KAC1B;SAAM;QACT,IAAI,GAAG,GAAG,IAAI,sBAAsB,CAAC,IAAI,CAAC,CAAC;QACrC,OAAO,CAAC,IAAI,EAAE,CAAC,GAAG,CAAC,CAAA;QACnB,OAAO,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,CAAA;KAC1B;AACL,CAAC,CAAA;AAED;;GAEG;AACH,MAAM,CAAC,MAAM,kBAAkB,EAAG,kBAAkB,GAAG,aAAa,oBAAoB;IAEpF,MAAM,OAAO,GAAG,UAAU,CAAC,aAAa,EAAE,CAAC;IAC3C,IAAI,OAAO,IAAI,IAAI,EAAE;QAGjB,MAAM,OAAO,GAAG,OAAO,CAAC,gBAAgB,CACpC,OAAO,CAAC,eAAe,CAC1B,IAAI,cAAc,CAAC;QACpB,MAAM,KAAK,GAAG,OAAO,CAAC,cAAc,CAChC,cAAc,CAAC,yBAAyB,CAC3C,CAAC;QAEF,IAAI,OAAO,GAAG,IAAI,YAAY,CAAC,MAAM,CAAC,sBAAsB,CAAC,CAAC;QAC9D,IAAI,aAAa,GAAG,OAAO,CAAC,gBAAgB,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5D,IAAI,MAAM,GAAG,aAAa,EAAE,WAAW,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,CAAC;QACzE,IAAI,UAAU,GAAG,MAAM,IAAI,cAAc,CAAC,uBAAuB,IAAI,MAAM,IAAI,cAAc,CAAC,mBAAmB,CAAC;QAElH,MAAM,GAAG,EAAG,oBAAoB,GAAG;YAC/B,KAAK,EAAE,KAAK;YACZ,UAAU,EAAE,UAAU;SACzB,CAAC;QAEF,OAAO,GAAG,CAAC;KACd;SACI;QACD;;WAEG;QACH,MAAM,GAAG,EAAG,oBAAoB,GAAG;YAC/B,KAAK,EAAE,CAAC,CAAC;YACT,UAAU,EAAE,KAAK;SACpB,CAAC;QACF,OAAO,GAAG,CAAC;KACd;AAGL,CAAC,CAAA","sourcesContent":["import Context from \"android.content.Context\";\r\nimport BatteryManager from \"android.os.BatteryManager\";\r\n\r\nimport { GetBatteryInfo, GetBatteryInfoOptions, GetBatteryInfoSuccess, GetBatteryInfoResult,GetBatteryInfoSync } from '../interface.uts'\r\nimport IntentFilter from 'android.content.IntentFilter';\r\nimport Intent from 'android.content.Intent';\r\n\r\nimport { GetBatteryInfoFailImpl } from '../unierror';\r\n\r\n/**\r\n * 异步获取电量\r\n */\r\nexport const getBatteryInfo : GetBatteryInfo = function (options : GetBatteryInfoOptions) {\r\n\r\n\r\n    const context = UTSAndroid.getAppContext();\r\n    if (context != null) {\r\n        const manager = context.getSystemService(\r\n            Context.BATTERY_SERVICE\r\n        ) as BatteryManager;\r\n        const level = manager.getIntProperty(\r\n            BatteryManager.BATTERY_PROPERTY_CAPACITY\r\n        );\r\n\r\n        let ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\r\n        let batteryStatus = context.registerReceiver(null, ifilter);\r\n        let status = batteryStatus?.getIntExtra(BatteryManager.EXTRA_STATUS, -1);\r\n        let isCharging = status == BatteryManager.BATTERY_STATUS_CHARGING || status == BatteryManager.BATTERY_STATUS_FULL;\r\n\r\n        const res : GetBatteryInfoSuccess = {\r\n            errMsg: 'getBatteryInfo:ok',\r\n            level,\r\n            isCharging: isCharging\r\n        }\r\n        options.success?.(res)\r\n        options.complete?.(res)\r\n    } else {\r\n\t\tlet res = new GetBatteryInfoFailImpl(1001);\r\n        options.fail?.(res)\r\n        options.complete?.(res)\r\n    }\r\n}\r\n\r\n/**\r\n * 同步获取电量示例\r\n */\r\nexport const getBatteryInfoSync : GetBatteryInfoSync = function (): GetBatteryInfoResult {\r\n\r\n    const context = UTSAndroid.getAppContext();\r\n    if (context != null) {\r\n\r\n\r\n        const manager = context.getSystemService(\r\n            Context.BATTERY_SERVICE\r\n        ) as BatteryManager;\r\n        const level = manager.getIntProperty(\r\n            BatteryManager.BATTERY_PROPERTY_CAPACITY\r\n        );\r\n        \r\n        let ifilter = new IntentFilter(Intent.ACTION_BATTERY_CHANGED);\r\n        let batteryStatus = context.registerReceiver(null, ifilter);\r\n        let status = batteryStatus?.getIntExtra(BatteryManager.EXTRA_STATUS, -1);\r\n        let isCharging = status == BatteryManager.BATTERY_STATUS_CHARGING || status == BatteryManager.BATTERY_STATUS_FULL;\r\n        \r\n        const res : GetBatteryInfoResult = {\r\n            level: level,\r\n            isCharging: isCharging\r\n        };\r\n\r\n        return res;\r\n    }\r\n    else {\r\n        /**\r\n         * 无有效上下文\r\n         */\r\n        const res : GetBatteryInfoResult = {\r\n            level: -1,\r\n            isCharging: false\r\n        };\r\n        return res;\r\n    }\r\n\r\n\r\n}\r\n"]}